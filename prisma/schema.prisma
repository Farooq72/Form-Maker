generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Form {
  id          String     @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime   @default(now())
  creatorId   String
  fields      Field[]
  Response    Response[]
}

model Field {
  id            String          @id @default(cuid())
  formId        String
  type          FieldType
  label         String
  options       String?
  isRequired    Boolean         @default(false)
  form          Form            @relation(fields: [formId], references: [id], onDelete: Cascade)
  ResponseField ResponseField[]
}

model Response {
  id             String          @id @default(cuid())
  submittedBy    String
  formId         String
  createdAt      DateTime        @default(now())
  form           Form            @relation(fields: [formId], references: [id], onDelete: Cascade)
  responseFields ResponseField[]
}

model ResponseField {
  id         String   @id @default(cuid())
  responseId String
  fieldId    String
  value      String
  field      Field    @relation(fields: [fieldId], references: [id], onDelete: Cascade)
  response   Response @relation(fields: [responseId], references: [id], onDelete: Cascade)
}

enum FieldType {
  text
  textarea
  radio
  select
}
